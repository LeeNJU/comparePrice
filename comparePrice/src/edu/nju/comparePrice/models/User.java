package edu.nju.comparePrice.models;

// Generated 2014-3-26 7:32:39 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "comparepricedb")
public class User implements java.io.Serializable {

	private Integer id;
	private String password;
	private String name;
	private Integer sensitivecount;
	private Set comments = new HashSet(0);
	private Set navies = new HashSet(0);

	public User() {
		super();
	}

	public User(Integer id,String password, String name, Integer sensitivecount,
			Set comments, Set navies) {
		this.id=id;
		this.password = password;
		this.name = name;
		this.sensitivecount = sensitivecount;
		this.comments = comments;
		this.navies = navies;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "password", length = 16)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "name", length = 16)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "sensitivecount")
	public Integer getSensitivecount() {
		return this.sensitivecount;
	}

	public void setSensitivecount(Integer sensitivecount) {
		this.sensitivecount = sensitivecount;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set getComments() {
		return this.comments;
	}

	public void setComments(Set comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set getNavies() {
		return this.navies;
	}

	public void setNavies(Set navies) {
		this.navies = navies;
	}

}
